name: docs
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+a[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+b[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
  workflow_dispatch:
    inputs:
      target:
        description: 'Site to build and deploy, or dry-run'
        type: choice
        options:
        - dev
        - main
        - dryrun
        required: true
        default: dryrun
  schedule:
    - cron: '0 20 * * SUN'

defaults:
  run:
    shell: bash -e {0}

env:
  PYTHON_VERSION: "3.11"
  DESC: "Documentation build"

jobs:
  pixi_lock:
    name: Pixi lock
    runs-on: ubuntu-latest
    steps:
      - uses: holoviz-dev/holoviz_tasks/pixi_lock@v0

  build_docs:
    name: Build Documentation
    needs: [pixi_lock]
    runs-on: 'ubuntu-latest'
    timeout-minutes: 120
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    env:
      DISPLAY: ":99.0"
      GITHUB_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: holoviz-dev/holoviz_tasks/pixi_install@v0
        with:
          environments: docs
      - name: Build documentation
        run: pixi run -e docs docs-build
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docs
          if-no-files-found: error
          path: site/builtdocs
      - name: Set output
        id: vars
        run: |
          echo "Deploying from ref %{GITHUB_REF#refs/*/}"
          echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: report failure
        if: failure()
        run: cat /tmp/sphinx-*.log | tail -n 100

  docs_publish:
    name: Publish Documentation
    runs-on: "ubuntu-latest"
    needs: [build_docs]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: docs
          path: site/builtdocs/
      - name: Set output
        id: vars
        run: echo "tag=${{ needs.docs_build.outputs.tag }}" >> $GITHUB_OUTPUT
      - name: Deploy dev
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'dev') ||
          (github.event_name == 'push' && (contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }}
          external_repository: holoviz-dev/nbsite-dev
          publish_dir: ./site/builtdocs
          force_orphan: true
      - name: Deploy main
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'main') ||
          (github.event_name == 'push' && !(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site/builtdocs
          cname: nbsite.holoviz.org
          force_orphan: true
