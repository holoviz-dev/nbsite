sudo: false
language: generic
os:
  - linux

env:
  global:
    - PYENV_VERSION=3.6
    # conda-forge for phantomjs on linux (https://github.com/AnacondaRecipes/aggregate/issues/38)
    - CHANS_DEV="-c pyviz/label/dev -c defaults -c conda-forge"
    - CHANS_REL="-c pyviz -c conda-forge"
    - LABELS_DEV="--label=dev"
    - LABELS_REL="--label=dev --label=main"
    - PKG_TEST_PYTHON="--test-python=py36"

stages:
  - test
  - name: conda_dev_package
    if: tag =~ ^v(\d+|\.)+[a-z]\d+$
  - name: pip_dev_package
    if: tag =~ ^v(\d+|\.)+[a-z]\d+$
  - name: conda_package
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$
  - name: pip_package
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$
  - name: website_release
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$ OR tag =~ ^v(\d+|\.)+[a-z]\d+$ OR tag = website

jobs:
  include:

    ########## DEVELOPER INSTALL ##########

    - &default
      stage: test
      env: DESC="dev test_all"
      before_install: pip install pyctdev && doit ecosystem_setup
      install:
        # TODO: pyctdev does not yet have env_create support for pip ecosystem
        #- doit env_create --python=$PYENV_VERSION
        - doit develop_install -o examples -o tests
        - doit env_capture
      script:
        - doit test_all

    - &website
      <<: *default
      stage: website_release
      env: DESC="Release website"
      script: doit build_docs
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./builtdocs
          fqdn: nbsite.pyviz.org
          on:
            tags: true
            all_branches: true

    ########## END-USER PACKAGES ##########

    ## dev packages

    - &pkg_default
      <<: *default
      stage: pip_dev_package
      env: DESC="" PYPI=testpypi PYPIUSER=$TPPU PYPIPASS=$TPPP
      install:
        - unset PYENV_VERSION && pyenv global 3.6 2.7
        - doit package_build $PKG_TEST_PYTHON --test-group=unit --sdist-install-build-deps
        # TODO: pyctdev doesn't yet support pypi channels during packaging
        #- doit ... --test-group=examples --test-requires=examples
      script: doit package_upload -u $PYPIUSER -p $PYPIPASS --pypi ${PYPI}

    - &conda_default
      stage: conda_dev_package
      env: CHANS=$CHANS_DEV LABELS=$LABELS_DEV
      before_install:
        # install doit/pyctdev and use to install miniconda...
        - pip install pyctdev && doit ecosystem=conda miniconda_install && pip uninstall -y doit pyctdev
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        # ...and now install doit/pyctdev into miniconda
        - conda install -c pyviz/label/dev pyctdev && doit ecosystem=conda ecosystem_setup
      install:
        - doit ecosystem=conda package_build --package-name=nbsite $CHANS $PKG_TEST_PYTHON --test-group=unit
        - doit ecosystem=conda package_test $CHANS $PKG_TEST_PYTHON --test-group=examples --test-requires=examples
      script: doit ecosystem=conda package_upload --token=$CONDA_UPLOAD_TOKEN $LABELS

    ## release packages

    - <<: *pkg_default
      stage: pip_package
      env: DESC="" PYPI=pypi PYPIUSER=$PPU PYPIPASS=$PPP

    - <<: *conda_default
      stage: conda_package
      env: CHANS=$CHANS_REL LABELS=$LABELS_REL
